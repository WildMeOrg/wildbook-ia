[flake8]
exclude = .git,.env
# This section configures `flake8`, the python linting utility.
# See also https://flake8.pycqa.org/en/latest/user/configuration.html
ignore = D100,D101,D102,D103,D105,D200,D205,D210,D400,D401,D403,E203,E501,N802,N803,N804,N805,N806,W503

# D100 - Missing docstring in public module
# D101 - Missing docstring in public class
# D102 - Missing docstring in public method
# D103 - Missing docstring in public function
# D105 - Missing docstring in public package
# D200 - One-line docstring should fit on one line with quotes
# D205 - 1 blank line required between summary line and description
# D210 - No whitespaces allowed surrounding docstring text
# D400 - First line should end with a period
# D401 - First line should be in imperative mood
# D403 - First word of the first line should be properly capitalized
# D* codes come from pydocstyle which is integrated into flake8 via flake8-docstring.
# See also http://www.pydocstyle.org/en/5.0.1/error_codes.html

# E203 - whitespace before ':'
# E501 - line too long (82 > 79 characters)
# E* codes come from pycodestyle which is integrated with flake8
# See also https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes

# N802 - function name should be lowercase
# N803 - argument name should be lowercase
# N804 - first argument of a classmethod should be named ‘cls’
# N805 - first argument of a method should be named ‘self’
# N806 - variable in function should be lowercase
# N* codes come from pep8-naming, which integrates with flake8
# See also https://github.com/PyCQA/pep8-naming#error-codes

# W503 - line break before binary operator
# W* codes come from pycodestyle which is integrated with flake8
# See also https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes

[tool:brunette]
line-length = 90
verbose = false
# skip-string-normalization = true
single-quotes = true

[tool:pytest]
minversion = 5.4
addopts = -v -p no:doctest --xdoctest --xdoctest-style=google -r fEs
testpaths =
    wbia
filterwarnings =
    default
    ignore:.*No cfgstr given in Cacher constructor or call.*:Warning
    ignore:.*Define the __nice__ method for.*:Warning

[metadata]
# This includes the license file(s) in the wheel.
license_files = LICENSE.txt
