name: Nightly
on:
  schedule:
    - cron: '0 0 * * *' # Every day at midnight
  push:
    paths:
      - '.github/workflows/nightly.yml'
  pull_request:
    paths:
      - '.github/workflows/nightly.yml'
      # Include any change to the development containers
      - 'devops/**'
      # Include changes to the runtime container or assets
      - 'Dockerfile'
      - '.dockerfiles/*'

jobs:
  wildbook-ia:
    name: Building wildme/wildbook-ia:nightly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        env:
          # Cache invalidated when Dockerfile or ./.dockerfiles have changed.
          # Docker will automatically handle cache invalidation for any changes to codebase.
          cache-name: cache-wildbook-ia-${{ hashFiles('Dockerfile', '.dockerfiles/**') }}
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/wildbookorg/wildbook-ia:nightly
            wildme/wildbook-ia:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-base-image:
    name: Building wildme/wbia-base
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      # TODO: Shorten the digest so that cach-names that use it aren't as long.
      # short-digest: ${{ ... }}
      image-name: ghcr.io/wildbookorg/wbia-base
      # fully qualified image name
      fq-image-name: ghcr.io/wildbookorg/wbia-base@${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        env:
          cache-name: cache-base-${{ hashFiles('devops/base/**') }}
        with:
          path: /tmp/.buildx-cache
          # Cache invalidated when any file in the 'devops' directory changes
          key: ${{ runner.os }}-buildx-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push wbia-base:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/base/Dockerfile
          push: true
          tags: |
            ghcr.io/wildbookorg/wbia-base:nightly
            wildme/wbia-base:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-dependencies-image:
    name: Building wildme/wbia-dependencies:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-base-image ]
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      image-name: ghcr.io/wildbookorg/wbia-dependencies
      # fully qualified image name
      fq-image-name: ghcr.io/wildbookorg/wbia-dependencies@${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        env:
          # Base the cache on the previous image's build
          # Cache invalidation when the previous image changes, to prevent building up unused layers in the cache
          # or when any file in the 'devops' directory changes
          # TODO: Cache invalidation based on date, where every 7 days (Sunday preferably) the cache becomes stale.
          cache-name: cache-dependencies-${{ needs.wbia-base-image.outputs.digest }}-${{ hashFiles('devops/dependencies/**') }}
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push wbia-dependencies:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/dependencies/Dockerfile
          push: true
          tags: |
            ghcr.io/wildbookorg/wbia-dependencies:nightly
            wildme/wbia-dependencies:nightly
          build-args: |
            WBIA_BASE_IMAGE=${{ needs.wbia-base-image.outputs.fq-image-name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-provision-image:
    name: Building wildme/wbia-provision:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-dependencies-image ]
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      image-name: ghcr.io/wildbookorg/wbia-provision
      # fully qualified image name
      fq-image-name: ghcr.io/wildbookorg/wbia-provision@${{ steps.docker_build.outputs.digest }}
    # Note, we cannot cache this step, because it's too large.
    # Enabling caching causes the build to run into an 'out of space' issue.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   env:
      #     # Base the cache on the previous image's build
      #     # Cache invalidation when the previous image changes, to prevent building up unused layers in the cache
      #     # or when any file in the 'devops' directory changes
      #     cache-name: cache-provision-${{ needs.wbia-dependencies-image.outputs.digest }}-${{ hashFiles('devops/provision/**') }}
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ env.cache-name }}
      #     restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push wbia-provision:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/provision/Dockerfile
          push: true
          tags: |
            ghcr.io/wildbookorg/wbia-provision:nightly
            wildme/wbia-provision:nightly
          build-args: |
            WBIA_DEPENDENCIES_IMAGE=${{ needs.wbia-dependencies-image.outputs.fq-image-name }}
          #   VCS_REF=develop
          #   VCS_URL=https://github.com/wildbookorg/wildbook-ia
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-image:
    name: Building wildme/wbia:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-base-image, wbia-provision-image ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push wbia:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./devops/
          file: ./devops/Dockerfile
          push: true
          tags: |
            ghcr.io/wildbookorg/wbia:nightly
            wildme/wbia:nightly
          build-args: |
            WBIA_BASE_IMAGE=${{ needs.wbia-base-image.outputs.fq-image-name }}
            WBIA_PROVISION_IMAGE=${{ needs.wbia-provision-image.outputs.fq-image-name }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  on-failure:
    name: Notify developers on Slack about a failure
    runs-on: ubuntu-latest
    needs: [ wildbook-ia, wbia-base-image, wbia-dependencies-image, wbia-provision-image, wbia-image ]
    steps:
      # Notify status in Slack
      - name: Slack Notification
        if: ${{ github.event_name == 'schedule' && needs.wildbook-ia.result != 'success' && needs.wbia-base-image.result != 'success' && needs.wbia-dependencies-image.result != 'success' && needs.wbia-provision-image.result != 'success' && needs.wbia-image.result != 'success' }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ia-development
          SLACK_COLOR: '#FF0000'
          SLACK_ICON: https://avatars.slack-edge.com/2020-03-02/965719891842_db87aa21ccb61076f236_44.png
          SLACK_MESSAGE: 'nightly build failed :sob:'
          SLACK_USERNAME: "Nightly"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
